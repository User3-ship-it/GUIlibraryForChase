local Library = {}
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")

Library.TransitionSpeed = 0.19
Library.WaitForNext = 0.055
Library.TransitionBack = 0.01

function Library:New(Name)
	local ScreenGui = Instance.new("ScreenGui")
	local Canvas = Instance.new("Frame")
	local UICorner = Instance.new("UICorner")
	local Title = Instance.new("TextLabel")
	local Tabs = Instance.new("Frame")
	local UIListLayout = Instance.new("UIListLayout")
	local UIPadding = Instance.new("UIPadding")
	local SquareUP = Instance.new("Frame")
	local UIListLayout_3 = Instance.new("UIListLayout")
	local BlueSquare = Instance.new("Frame")
	local BlueSquare_2 = Instance.new("Frame")
	local BlueSquare_3 = Instance.new("Frame")
	local BlueSquare_4 = Instance.new("Frame")
	local BlueSquare_5 = Instance.new("Frame")
	local BlueSquare_6 = Instance.new("Frame")
	local BlueSquare_7 = Instance.new("Frame")
	local BlueSquare_8 = Instance.new("Frame")
	local BlueSquare_9 = Instance.new("Frame")
	local BlueSquare_10 = Instance.new("Frame")

	--Properties:

	ScreenGui.Parent = game:GetService('Players').LocalPlayer:WaitForChild("PlayerGui")
	ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

	ScreenGui.ResetOnSpawn = false 

	Canvas.Name = "Canvas"
	Canvas.Parent = ScreenGui
	Canvas.BackgroundColor3 = Color3.fromRGB(24, 24, 24)
	Canvas.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Canvas.BorderSizePixel = 0
	Canvas.Position = UDim2.new(0.255686998, 0, 0.143867925, 0)
	Canvas.Size = UDim2.new(0.358, 0,0.488, 0)

	UICorner.Parent = Canvas

	Title.Name = "Title"
	Title.Parent = Canvas
	Title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Title.BackgroundTransparency = 1.000
	Title.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Title.BorderSizePixel = 0
	Title.Position = UDim2.new(0.014403292, 0, 0.0234604105, 0)
	Title.Size = UDim2.new(0.973251045, 0, 0.0381231718, 0)
	Title.FontFace = Font.fromId(12187371840)
	Title.Text = Name
	Title.TextColor3 = Color3.fromRGB(255, 255, 255)
	Title.TextScaled = true
	Title.TextSize = 14.000
	Title.TextWrapped = true
	Title.TextXAlignment = Enum.TextXAlignment.Left

	Tabs.Name = "Tabs"
	Tabs.Parent = Canvas
	Tabs.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Tabs.BackgroundTransparency = 1.000
	Tabs.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Tabs.BorderSizePixel = 0
	Tabs.Position = UDim2.new(0, 0,0.076, 0)
	Tabs.Size = UDim2.new(0.276, 0,0.922, 0)

	UIListLayout.Parent = Tabs
	UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
	UIListLayout.Padding = UDim.new(0.015,0)

	UIPadding.Parent = Tabs
	UIPadding.PaddingLeft = UDim.new(0.0599999987, 0)
	UIPadding.PaddingTop = UDim.new(0.00999999978, 0)

	SquareUP.Name = "SquareUP"
	SquareUP.Parent = Canvas
	SquareUP.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	SquareUP.BackgroundTransparency = 1.000
	SquareUP.BorderColor3 = Color3.fromRGB(0, 0, 0)
	SquareUP.BorderSizePixel = 0
	SquareUP.Position = UDim2.new(0.275999993, 0, 0.0829999968, 0)
	SquareUP.Size = UDim2.new(0.712000012, 0, 0.899999976, 0)
	SquareUP.ZIndex = 2

	UIListLayout_3.Parent = SquareUP
	UIListLayout_3.SortOrder = Enum.SortOrder.LayoutOrder

	BlueSquare.Name = "BlueSquare"
	BlueSquare.Parent = SquareUP
	BlueSquare.BackgroundColor3 = Color3.fromRGB(1, 175, 255)
	BlueSquare.BorderColor3 = Color3.fromRGB(0, 0, 0)
	BlueSquare.BorderSizePixel = 0
	BlueSquare.Size = UDim2.new(0, 0, 0.0999338329, 0)

	BlueSquare_2.Name = "BlueSquare"
	BlueSquare_2.Parent = SquareUP
	BlueSquare_2.BackgroundColor3 = Color3.fromRGB(1, 175, 255)
	BlueSquare_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
	BlueSquare_2.BorderSizePixel = 0
	BlueSquare_2.Position = UDim2.new(0, 0, 0.0999338329, 0)
	BlueSquare_2.Size = UDim2.new(0, 0, 0.0999338329, 0)

	BlueSquare_3.Name = "BlueSquare"
	BlueSquare_3.Parent = SquareUP
	BlueSquare_3.BackgroundColor3 = Color3.fromRGB(1, 175, 255)
	BlueSquare_3.BorderColor3 = Color3.fromRGB(0, 0, 0)
	BlueSquare_3.BorderSizePixel = 0
	BlueSquare_3.Position = UDim2.new(0, 0, 0.199867666, 0)
	BlueSquare_3.Size = UDim2.new(0, 0, 0.0999338329, 0)

	BlueSquare_4.Name = "BlueSquare"
	BlueSquare_4.Parent = SquareUP
	BlueSquare_4.BackgroundColor3 = Color3.fromRGB(1, 175, 255)
	BlueSquare_4.BorderColor3 = Color3.fromRGB(0, 0, 0)
	BlueSquare_4.BorderSizePixel = 0
	BlueSquare_4.Position = UDim2.new(0, 0, 0.299801499, 0)
	BlueSquare_4.Size = UDim2.new(0, 0, 0.0999338329, 0)

	BlueSquare_5.Name = "BlueSquare"
	BlueSquare_5.Parent = SquareUP
	BlueSquare_5.BackgroundColor3 = Color3.fromRGB(1, 175, 255)
	BlueSquare_5.BorderColor3 = Color3.fromRGB(0, 0, 0)
	BlueSquare_5.BorderSizePixel = 0
	BlueSquare_5.Position = UDim2.new(0, 0, 0.399735332, 0)
	BlueSquare_5.Size = UDim2.new(0, 0, 0.0999338329, 0)

	BlueSquare_6.Name = "BlueSquare"
	BlueSquare_6.Parent = SquareUP
	BlueSquare_6.BackgroundColor3 = Color3.fromRGB(1, 175, 255)
	BlueSquare_6.BorderColor3 = Color3.fromRGB(0, 0, 0)
	BlueSquare_6.BorderSizePixel = 0
	BlueSquare_6.Position = UDim2.new(0, 0, 0.499669164, 0)
	BlueSquare_6.Size = UDim2.new(0, 0, 0.0999338329, 0)

	BlueSquare_7.Name = "BlueSquare"
	BlueSquare_7.Parent = SquareUP
	BlueSquare_7.BackgroundColor3 = Color3.fromRGB(1, 175, 255)
	BlueSquare_7.BorderColor3 = Color3.fromRGB(0, 0, 0)
	BlueSquare_7.BorderSizePixel = 0
	BlueSquare_7.Position = UDim2.new(0, 0, 0.599602997, 0)
	BlueSquare_7.Size = UDim2.new(0, 0, 0.0999336764, 0)

	BlueSquare_8.Name = "BlueSquare"
	BlueSquare_8.Parent = SquareUP
	BlueSquare_8.BackgroundColor3 = Color3.fromRGB(1, 175, 255)
	BlueSquare_8.BorderColor3 = Color3.fromRGB(0, 0, 0)
	BlueSquare_8.BorderSizePixel = 0
	BlueSquare_8.Position = UDim2.new(0, 0, 0.699536741, 0)
	BlueSquare_8.Size = UDim2.new(0, 0, 0.0999336764, 0)

	BlueSquare_9.Name = "BlueSquare"
	BlueSquare_9.Parent = SquareUP
	BlueSquare_9.BackgroundColor3 = Color3.fromRGB(1, 175, 255)
	BlueSquare_9.BorderColor3 = Color3.fromRGB(0, 0, 0)
	BlueSquare_9.BorderSizePixel = 0
	BlueSquare_9.Position = UDim2.new(0, 0, 0.799470425, 0)
	BlueSquare_9.Size = UDim2.new(0, 0, 0.0999338329, 0)

	BlueSquare_10.Name = "BlueSquare"
	BlueSquare_10.Parent = SquareUP
	BlueSquare_10.BackgroundColor3 = Color3.fromRGB(1, 175, 255)
	BlueSquare_10.BorderColor3 = Color3.fromRGB(0, 0, 0)
	BlueSquare_10.BorderSizePixel = 0
	BlueSquare_10.Position = UDim2.new(0, 0, 0.899404228, 0)
	BlueSquare_10.Size = UDim2.new(0, 0, 0.0999338329, 0)

	local dragging
	local dragInput
	local dragStart
	local startPos

	local function update(input)
		local delta = input.Position - dragStart
		Canvas.Position = UDim2.new(
			startPos.X.Scale, startPos.X.Offset + delta.X,
			startPos.Y.Scale, startPos.Y.Offset + delta.Y
		)
	end

	Canvas.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			dragging = true
			dragStart = input.Position
			startPos = Canvas.Position

			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then
					dragging = false
				end
			end)
		end
	end)

	Canvas.InputChanged:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
			dragInput = input
		end
	end)

	UserInputService.InputChanged:Connect(function(input)
		if input == dragInput and dragging then
			update(input)
		end
	end)

	local selectedTab = nil
	local tabData = {}

	local FrameOBJ = {}

	function FrameOBJ:CreateTab(TabText)

		local tab = {}

		local Tab = Instance.new("TextButton")
		local UICorner = Instance.new("UICorner", Tab)
		local UIStroke = Instance.new("UIStroke", Tab)
		local BlueSelect = Instance.new("Frame", Tab)
		local TabName = Instance.new("TextLabel", Tab)
		local list = Instance.new("UIListLayout")

		Tab.Name = "Tab"
		Tab.Parent = Tabs
		Tab.BackgroundTransparency = 1
		Tab.Text = ""
		Tab.Size = UDim2.new(0.929, 0, 0.086, 0) 

		UIStroke.Color = Color3.fromRGB(4, 150, 245)
		UIStroke.Transparency = 1
		UIStroke.Thickness = 1.3
		UIStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border

		BlueSelect.BackgroundColor3 = Color3.fromRGB(20, 165, 255)
		BlueSelect.BorderSizePixel = 0
		BlueSelect.Position = UDim2.new(0.08, 0,0.208, 0)
		BlueSelect.Size = UDim2.new(0, 0,0.521, 0)
		BlueSelect.ZIndex = -1
		BlueSelect.Name = "BlueSelect"

		TabName.BackgroundTransparency = 1
		TabName.Position = UDim2.new(0.1, 0,0.074, 0)
		TabName.Size = UDim2.new(1, 0,0.73, 0)
		TabName.FontFace = Font.fromId(12187371840)
		TabName.Text = TabText
		TabName.TextColor3 = Color3.fromRGB(255, 255, 255)
		TabName.TextSize = 15
		TabName.TextXAlignment = Enum.TextXAlignment.Left
		TabName.Name = "TabName"

		local UIPadding = Instance.new("UIPadding")
		UIPadding.PaddingTop = UDim.new(0.02,0)
		UIPadding.PaddingLeft = UDim.new(0.05,0)

		local TabFrame = Instance.new("ScrollingFrame", Canvas)
		UIPadding.Parent = TabFrame
		TabFrame.Name = TabText .. "_Frame"
		TabFrame.BackgroundColor3 = Color3.fromRGB(27, 27, 27)
		TabFrame.BorderSizePixel = 0
		TabFrame.Position = UDim2.new(0.275720179, 0, 0.0825220346, 0)
		TabFrame.Size = UDim2.new(0.711934149, 0, 0.899882674, 0)
		TabFrame.Visible = false
		TabFrame.ScrollBarImageTransparency = 1
		TabFrame.VerticalScrollBarInset = Enum.ScrollBarInset.Always
		list.Parent = TabFrame
		list.Padding = UDim.new(0.017, 0)

		tabData[Tab] = {BlueSelect = BlueSelect, UIStroke = UIStroke, TabName = TabName, TabFrame = TabFrame}

		Tab.MouseButton1Click:Connect(function()
			if selectedTab and selectedTab ~= Tab then
				local old = tabData[selectedTab]
				TweenService:Create(old.BlueSelect, TweenInfo.new(0.3), {Size = UDim2.new(0, 0,0.521, 0)}):Play()
				TweenService:Create(old.UIStroke, TweenInfo.new(0.3), {Transparency = 1}):Play()
				TweenService:Create(old.TabName, TweenInfo.new(0.3), {TextColor3 = Color3.fromRGB(255, 255, 255)}):Play()
				old.TabFrame.Visible = false
			end

			task.spawn(function()
				local tweenService = game:GetService("TweenService")
				local easingData = TweenInfo.new(Library.TransitionSpeed,Enum.EasingStyle.Sine)
				local squares = SquareUP:GetChildren()
				for i,v in squares do
					if v:IsA("Frame") then
						local tween = TweenService:Create(v,easingData,{Size = UDim2.new(1, 0,0.1, 0)})
						tween:Play()
						task.wait(Library.WaitForNext)
					end
				end 
				task.wait(Library.TransitionBack)
				for i,v in squares do
					if v:IsA("Frame") then
						local tween = TweenService:Create(v,easingData,{Size = UDim2.new(-0, 0,0.1, 0)})
						tween:Play()
						task.wait(Library.WaitForNext)
					end
				end 
			end)

			-- Animate current tab
			local current = tabData[Tab]
			TweenService:Create(current.BlueSelect, TweenInfo.new(0.3), {Size = UDim2.new(0.7, 0,0.521, 0)}):Play()
			TweenService:Create(current.UIStroke, TweenInfo.new(0.3), {Transparency = 0}):Play()
			TweenService:Create(current.TabName, TweenInfo.new(0.3), {TextColor3 = Color3.fromRGB(0, 0, 0)}):Play()
			current.TabFrame.Visible = true

			selectedTab = Tab
		end)

		function tab:NewButton(Name,call)
			local TextButton = Instance.new("TextButton")
			local UICorner_4 = Instance.new("UICorner")
			local UIStroke_2 = Instance.new("UIStroke")

			TextButton.Parent = TabFrame
			TextButton.BackgroundColor3 = Color3.fromRGB(24, 24, 24)
			TextButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
			TextButton.BorderSizePixel = 0
			TextButton.Position = UDim2.new(9.86181892e-09, 0, 0.0101410802, 0)
			TextButton.Size = UDim2.new(0.98, 0,0.039,0)
			TextButton.FontFace = Font.fromId(12187371840)
			TextButton.TextColor3 = Color3.fromRGB(234, 234, 234)
			TextButton.Text = Name
			TextButton.Name = "Button".. Name
			TextButton.TextSize = 14


			UICorner_4.CornerRadius = UDim.new(0.12, 0)
			UICorner_4.Parent = TextButton

			UIStroke_2.Parent = TextButton
			UIStroke_2.Color = Color3.fromRGB(40, 37, 38)
			UIStroke_2.Thickness = 2.000
			UIStroke_2.ApplyStrokeMode = Enum.ApplyStrokeMode.Border


			TextButton.MouseButton1Click:Connect(function()
				pcall(call)
			end)

			print(Name,call)
		end

		function tab:NewSlider(name, minValue, maxValue, defaultValue, callback)
			local Slider = Instance.new("Frame")
			local UICorner_5 = Instance.new("UICorner")
			local UIStroke_3 = Instance.new("UIStroke")
			local SliderName = Instance.new("TextLabel")
			local SlideBG = Instance.new("CanvasGroup")
			local Fill = Instance.new("Frame")
			local Trigger = Instance.new("TextButton")
			local corner = Instance.new("UICorner")
			local stroke = Instance.new("UIStroke")
			local Teller = Instance.new("TextLabel")
			local UICorner_6 = Instance.new("UICorner")
			local UIStroke_4 = Instance.new("UIStroke")

			Slider.Name = "Slider"..name
			SlideBG.Name = "SlideBG"
			Slider.Parent = TabFrame
			Slider.BackgroundColor3 = Color3.fromRGB(24, 24, 24)
			Slider.Size = UDim2.new(0.98, 0,0.041,0)

			UICorner_5.Parent = Slider

			UIStroke_3.Parent = Slider
			UIStroke_3.Color = Color3.fromRGB(40, 37, 38)
			UIStroke_3.Thickness = 1.6
			UICorner_5.CornerRadius = UDim.new(0.12, 0)

			SliderName.Name = "SliderName"
			SliderName.Parent = Slider
			SliderName.BackgroundTransparency = 1
			SliderName.Position = UDim2.new(0.03, 0, 0, 0)
			SliderName.Size = UDim2.new(0.4, 0, 1, 0)
			SliderName.FontFace = Font.fromId(12187371840)
			SliderName.Text = name
			SliderName.TextColor3 = Color3.fromRGB(255, 255, 255)
			SliderName.TextSize = 14
			SliderName.TextXAlignment = Enum.TextXAlignment.Left

			SlideBG.Parent = Slider
			SlideBG.BackgroundColor3 = Color3.fromRGB(22, 22, 22)
			SlideBG.Position = UDim2.new(0.613, 0,0.4, 0)
			SlideBG.Size = UDim2.new(0.35, 0,0.174, 0)
			corner.Parent = SlideBG
			corner.CornerRadius = UDim.new(0, 1000)
			stroke.Parent = SlideBG
			stroke.Color = Color3.fromRGB(40, 37, 38)
			stroke.Thickness = 1.6

			Fill.Parent = SlideBG
			Fill.BackgroundColor3 = Color3.fromRGB(56, 51, 54)
			Fill.Size = UDim2.new(0, 0, 1, 0)

			Fill.BorderSizePixel = 0

			Trigger.Size = UDim2.new(1, 0, 1, 0)
			Trigger.BackgroundTransparency = 1
			Trigger.Text = ""
			Trigger.Parent = SlideBG

			Teller.Name = "Teller"
			Teller.Parent = Slider
			Teller.BackgroundColor3 = Color3.fromRGB(24, 24, 24)
			Teller.BorderColor3 = Color3.fromRGB(0, 0, 0)
			Teller.BorderSizePixel = 0
			Teller.Position = UDim2.new(0.495118469, 0, 0.202022702, 0)
			Teller.Size = UDim2.new(0.0808327571, 0, 0.54072094, 0)
			Teller.FontFace = Font.fromId(12187371840) 
			Teller.Text = defaultValue
			Teller.TextColor3 = Color3.fromRGB(214, 214, 214)
			Teller.TextSize = 14.000
			Teller.TextScaled = true

			UICorner_6.CornerRadius = UDim.new(0.150000006, 0)
			UICorner_6.Parent = Teller

			UIStroke_4.Parent = Teller
			UIStroke_4.Color = Color3.fromRGB(40, 37, 38)
			UIStroke_4.Thickness = 2.000
			UIStroke_4.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
			-- Slider logic
			local mouse = game:GetService("Players").LocalPlayer:GetMouse()
			local tweenService = game:GetService("TweenService")
			local tweenStyle = TweenInfo.new(0.2, Enum.EasingStyle.Exponential)

			local currentValue = defaultValue or minValue
			local function UpdateSlider()
				local triggerAbsPos = Trigger.AbsolutePosition.X
				local triggerWidth = Trigger.AbsoluteSize.X
				local relativeX = math.clamp(mouse.X - triggerAbsPos, 0, triggerWidth)
				local percent = relativeX / triggerWidth
				local value = minValue + percent * (maxValue - minValue)
				value = math.clamp(math.round(value), minValue, maxValue)

				Teller.Text = value  -- no need for decimals now

				if currentValue ~= value then
					tweenService:Create(Fill, tweenStyle, { Size = UDim2.fromScale(percent, 1) }):Play()
					currentValue = value
					if callback then
						pcall(callback, value)
					end
				end
			end

			local sliderActive = false
			local function ActivateSlider()
				sliderActive = true
				while sliderActive do
					UpdateSlider()
					task.wait()
				end
			end

			Trigger.MouseButton1Down:Connect(ActivateSlider)
			game:GetService("UserInputService").InputEnded:Connect(function(input)
				if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
					sliderActive = false
				end
			end)
			local initPercent = (currentValue - minValue) / (maxValue - minValue)
			Fill.Size = UDim2.fromScale(initPercent, 1)

			return currentValue
		end

		function tab:NewToggle(name,callback)
			local tweenService = game:GetService("TweenService")
			local tweenStyle = TweenInfo.new(0.34, Enum.EasingStyle.Sine)
			local state = false
			local Toggle = Instance.new("Frame")
			local UICorner_6 = Instance.new("UICorner")
			local UIStroke_4 = Instance.new("UIStroke")
			local Toggle_2 = Instance.new("TextLabel")
			local TextButton_2 = Instance.new("TextButton")
			local UICorner_7 = Instance.new("UICorner")
			local UIStroke_5 = Instance.new("UIStroke")
			local UIAspectRatioConstraint = Instance.new("UIAspectRatioConstraint")

			Toggle.Name = "Toggle".. name
			Toggle.Parent = TabFrame
			Toggle.BackgroundColor3 = Color3.fromRGB(24, 24, 24)
			Toggle.BorderColor3 = Color3.fromRGB(0, 0, 0)
			Toggle.BorderSizePixel = 0
			Toggle.Size = UDim2.new(0.980000019, 0, 0.0410000011, 0)

			UICorner_6.CornerRadius = UDim.new(0.12, 0)
			UICorner_6.Parent = Toggle

			UIStroke_4.Parent = Toggle
			UIStroke_4.Color = Color3.fromRGB(40, 37, 38)
			UIStroke_4.Thickness = 2.000
			UIStroke_4.ApplyStrokeMode = Enum.ApplyStrokeMode.Border

			Toggle_2.Name = "Toggle"
			Toggle_2.Parent = Toggle
			Toggle_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			Toggle_2.BackgroundTransparency = 1.000
			Toggle_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
			Toggle_2.BorderSizePixel = 0
			Toggle_2.Position = UDim2.new(0.0337334462, 0, 0, 0)
			Toggle_2.Size = UDim2.new(0.319197714, 0, 1, 0)
			Toggle_2.FontFace = Font.fromId(12187371840)
			Toggle_2.Text = name
			Toggle_2.TextColor3 = Color3.fromRGB(255, 255, 255)
			Toggle_2.TextSize = 14.000
			Toggle_2.TextXAlignment = Enum.TextXAlignment.Left

			TextButton_2.Parent = Toggle
			TextButton_2.BackgroundColor3 = Color3.fromRGB(28, 28, 28)
			TextButton_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
			TextButton_2.BorderSizePixel = 0
			TextButton_2.Position = UDim2.new(0.899700403, 0, 0.189, 0)
			TextButton_2.Size = UDim2.new(0.046, 0, 0.56, 0)
			TextButton_2.FontFace = Font.fromId(12187371840)
			TextButton_2.Text = " "
			TextButton_2.TextColor3 = Color3.fromRGB(0, 0, 0)
			TextButton_2.TextSize = 14.000

			UICorner_7.CornerRadius = UDim.new(0.12, 0)
			UICorner_7.Parent = TextButton_2

			UIStroke_5.Parent = TextButton_2
			UIStroke_5.Color = Color3.fromRGB(35, 35, 35)
			UIStroke_5.Thickness = 2.000
			UIStroke_5.ApplyStrokeMode = Enum.ApplyStrokeMode.Border

			UIAspectRatioConstraint.Parent = TextButton_2
			UIAspectRatioConstraint.AspectRatio = 1.000

			TextButton_2.MouseButton1Click:Connect(function()
				state = not state
				if state == true then
					tweenService:Create(TextButton_2, tweenStyle, {BackgroundColor3 = Color3.fromRGB(20, 165, 255)}):Play()
					tweenService:Create(UIStroke_5, tweenStyle, {Color = Color3.fromRGB(12, 100, 148)}):Play()
				else
					tweenService:Create(TextButton_2, tweenStyle, {BackgroundColor3 = Color3.fromRGB(28, 28, 28)}):Play()
					tweenService:Create(UIStroke_5, tweenStyle, {Color = Color3.fromRGB(35, 35, 35)}):Play()
				end
				if callback then
					pcall(callback, state)
				end
			end)
		end

		function tab:NewDropdown(Type,Optionss,name)
			if Type == "Single" then
				local tweenService = game:GetService("TweenService")
				local tweenStyle = TweenInfo.new(0.13, Enum.EasingStyle.Sine)
				local tweenStyle2 = TweenInfo.new(0.28, Enum.EasingStyle.Sine)
				local selected = nil
				local oldSelected = nil
				local Dropdown = Instance.new("Frame")
				local UICorner_8 = Instance.new("UICorner")
				local UIStroke_6 = Instance.new("UIStroke")
				local Toggle_3 = Instance.new("TextLabel")
				local ImageButton = Instance.new("ImageButton")
				local UIAspectRatioConstraint_2 = Instance.new("UIAspectRatioConstraint")
				local UICorner_9 = Instance.new("UICorner")
				local DropdownPopup = Instance.new("Frame")
				local UICorner_11 = Instance.new("UICorner")
				local UIStroke_8 = Instance.new("UIStroke")
				local Options = Instance.new("ScrollingFrame")
				local UIListLayout_4 = Instance.new("UIListLayout")
				local UIPadding_4 = Instance.new("UIPadding")
				local UIAspectRatioConstraint_6 = Instance.new("UIAspectRatioConstraint")
				local Comfirm = Instance.new("TextButton")
				local UICorner_14 = Instance.new("UICorner")
				local UIAspectRatioConstraint_7 = Instance.new("UIAspectRatioConstraint")
				local Droppopupname = Instance.new("TextLabel")
				local UIAspectRatioConstraint_8 = Instance.new("UIAspectRatioConstraint")
				local UIAspectRatioConstraint_9 = Instance.new("UIAspectRatioConstraint")

				Dropdown.Name = "Dropdown".. Name
				Dropdown.Parent = TabFrame
				Dropdown.BackgroundColor3 = Color3.fromRGB(24, 24, 24)
				Dropdown.BorderColor3 = Color3.fromRGB(0, 0, 0)
				Dropdown.BorderSizePixel = 0
				Dropdown.Size = UDim2.new(0.980000019, 0, 0.0410000011, 0)

				UICorner_8.CornerRadius = UDim.new(0.12, 0)
				UICorner_8.Parent = Dropdown

				UIStroke_6.Parent = Dropdown
				UIStroke_6.Color = Color3.fromRGB(40, 37, 38)
				UIStroke_6.Thickness = 2.000
				UIStroke_6.ApplyStrokeMode = Enum.ApplyStrokeMode.Border

				Toggle_3.Name = "Title"
				Toggle_3.Parent = Dropdown
				Toggle_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
				Toggle_3.BackgroundTransparency = 1.000
				Toggle_3.BorderColor3 = Color3.fromRGB(0, 0, 0)
				Toggle_3.BorderSizePixel = 0
				Toggle_3.Position = UDim2.new(0.0337334462, 0, 0, 0)
				Toggle_3.Size = UDim2.new(0.319197714, 0, 1, 0)
				Toggle_3.FontFace = Font.fromId(12187371840)
				Toggle_3.Text = name
				Toggle_3.TextColor3 = Color3.fromRGB(255, 255, 255)
				Toggle_3.TextSize = 14.000
				Toggle_3.TextXAlignment = Enum.TextXAlignment.Left

				ImageButton.Parent = Dropdown
				ImageButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
				ImageButton.BackgroundTransparency = 1.000
				ImageButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
				ImageButton.BorderSizePixel = 0
				ImageButton.Position = UDim2.new(0.899700403, 0, 0.189, 0)
				ImageButton.Size = UDim2.new(0.0520000011, 0, 0.638999999, 0)
				ImageButton.Image = "rbxassetid://10723346553"
				ImageButton.ImageColor3 = Color3.fromRGB(168, 168, 168)

				UIAspectRatioConstraint_2.Parent = ImageButton
				UIAspectRatioConstraint_2.AspectRatio = 1.000

				UICorner_9.CornerRadius = UDim.new(0, 4)
				UICorner_9.Parent = ImageButton

				DropdownPopup.Name = "DropdownPopup"
				DropdownPopup.Parent = Canvas
				DropdownPopup.AnchorPoint = Vector2.new(0.5, 0.5)
				DropdownPopup.BackgroundColor3 = Color3.fromRGB(24, 24, 24)
				DropdownPopup.BorderColor3 = Color3.fromRGB(0, 0, 0)
				DropdownPopup.BorderSizePixel = 0
				DropdownPopup.Position = UDim2.new(0.500453055, 0, 0.531322122, 0)
				DropdownPopup.Size = UDim2.new(0.58324039, 0, 0.606967211, 0)
				DropdownPopup.ZIndex = 6
				DropdownPopup.Visible = false

				UICorner_11.CornerRadius = UDim.new(0.0299999993, 0)
				UICorner_11.Parent = DropdownPopup

				UIStroke_8.Parent = DropdownPopup
				UIStroke_8.Color = Color3.fromRGB(40, 37, 38)
				UIStroke_8.Thickness = 2.000
				UIStroke_8.ApplyStrokeMode = Enum.ApplyStrokeMode.Border

				Options.Name = "Options"
				Options.Parent = DropdownPopup
				Options.Active = true
				Options.BackgroundColor3 = Color3.fromRGB(28, 28, 28)
				Options.BorderColor3 = Color3.fromRGB(0, 0, 0)
				Options.BorderSizePixel = 0
				Options.Position = UDim2.new(0.0590000004, 0, 0.144999996, 0)
				Options.Size = UDim2.new(0.883000016, 0, 0.658999979, 0)
				Options.ScrollBarImageColor3 = Color3.fromRGB(0, 0, 0)
				Options.ScrollBarImageTransparency = 1

				UIListLayout_4.Parent = Options
				UIListLayout_4.SortOrder = Enum.SortOrder.LayoutOrder
				UIListLayout_4.Padding = UDim.new(0.0199999996, 0)

				UIPadding_4.Parent = Options
				UIPadding_4.PaddingLeft = UDim.new(0.0299999993, 0)
				UIPadding_4.PaddingTop = UDim.new(0.0299999993, 0)

				UIAspectRatioConstraint_6.Parent = Options
				UIAspectRatioConstraint_6.AspectRatio = 1.829

				Comfirm.Name = "Comfirm"
				Comfirm.Parent = DropdownPopup
				Comfirm.BackgroundColor3 = Color3.fromRGB(20, 165, 255)
				Comfirm.BorderColor3 = Color3.fromRGB(0, 0, 0)
				Comfirm.BorderSizePixel = 0
				Comfirm.Position = UDim2.new(0.0590000004, 0, 0.853999972, 0)
				Comfirm.Size = UDim2.new(0.352797031, 0, 0.0977992266, 0)
				Comfirm.FontFace = Font.fromId(12187371840)
				Comfirm.Text = "Confirm"
				Comfirm.TextColor3 = Color3.fromRGB(255, 255, 255)
				Comfirm.TextScaled = true
				Comfirm.TextSize = 14.000
				Comfirm.TextWrapped = true

				UICorner_14.CornerRadius = UDim.new(0.200000003, 0)
				UICorner_14.Parent = Comfirm

				UIAspectRatioConstraint_7.Parent = Comfirm
				UIAspectRatioConstraint_7.AspectRatio = 4.924

				Droppopupname.Name = "Droppopupname"
				Droppopupname.Parent = DropdownPopup
				Droppopupname.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
				Droppopupname.BackgroundTransparency = 1.000
				Droppopupname.BorderColor3 = Color3.fromRGB(0, 0, 0)
				Droppopupname.BorderSizePixel = 0
				Droppopupname.Position = UDim2.new(0.059, 0,0.043, 0)
				Droppopupname.Size = UDim2.new(0.883, 0,0.081, 0)
				Droppopupname.FontFace = Font.fromId(12187371840)
				Droppopupname.TextColor3 = Color3.fromRGB(255, 255, 255)
				Droppopupname.Text = name
				Droppopupname.TextScaled = true
				Droppopupname.TextSize = 14.000
				Droppopupname.TextWrapped = true
				Droppopupname.TextXAlignment = Enum.TextXAlignment.Left

				UIAspectRatioConstraint_8.Parent = Droppopupname
				UIAspectRatioConstraint_8.AspectRatio = 18.812

				UIAspectRatioConstraint_9.Parent = DropdownPopup
				UIAspectRatioConstraint_9.AspectRatio = 1.365

				local togls = {}

				for i, optionName in ipairs(Optionss) do
					local Option1 = Instance.new("Frame")
					local UIStroke_9 = Instance.new("UIStroke")
					local UICorner_12 = Instance.new("UICorner")
					local TextButton_3 = Instance.new("TextButton")
					local UICorner_13 = Instance.new("UICorner")
					local UIStroke_10 = Instance.new("UIStroke")
					local UIAspectRatioConstraint_3 = Instance.new("UIAspectRatioConstraint")
					local Toggle_3 = Instance.new("TextLabel")
					local UIAspectRatioConstraint_4 = Instance.new("UIAspectRatioConstraint")
					local UIAspectRatioConstraint_5 = Instance.new("UIAspectRatioConstraint")

					Option1.Name = "Option1"
					Option1.Parent = Options
					Option1.BackgroundColor3 = Color3.fromRGB(24, 24, 24)
					Option1.BorderColor3 = Color3.fromRGB(0, 0, 0)
					Option1.BorderSizePixel = 0
					Option1.Position = UDim2.new(2.28251604e-08, 0, 0.0629351735, 0)
					Option1.Size = UDim2.new(0.95, 0,0.074, 0)

					UIStroke_9.Parent = Option1
					UIStroke_9.Color = Color3.fromRGB(40, 37, 38)
					UIStroke_9.Thickness = 2.000
					UIStroke_9.ApplyStrokeMode = Enum.ApplyStrokeMode.Border

					UICorner_12.CornerRadius = UDim.new(0.119999997, 0)
					UICorner_12.Parent = Option1

					TextButton_3.Parent = Option1
					TextButton_3.BackgroundColor3 = Color3.fromRGB(28, 28, 28)
					TextButton_3.BorderColor3 = Color3.fromRGB(0, 0, 0)
					TextButton_3.BorderSizePixel = 0
					TextButton_3.Position = UDim2.new(0.871406376, 0, 0.214684561, 0)
					TextButton_3.Size = UDim2.new(0.0720606446, 0, 0.551630795, 0)
					TextButton_3.FontFace = Font.fromId(12187371840)
					TextButton_3.Text = " "
					TextButton_3.TextColor3 = Color3.fromRGB(0, 0, 0)
					TextButton_3.TextSize = 14.000

					UICorner_13.CornerRadius = UDim.new(0.150000006, 0)
					UICorner_13.Parent = TextButton_3

					UIStroke_10.Parent = TextButton_3
					UIStroke_10.Color = Color3.fromRGB(35, 35, 35)
					UIStroke_10.Thickness = 2.000
					UIStroke_10.ApplyStrokeMode = Enum.ApplyStrokeMode.Border

					UIAspectRatioConstraint_3.Parent = TextButton_3
					UIAspectRatioConstraint_3.AspectRatio = 0.982

					Toggle_3.Name = "Toggle"
					Toggle_3.Parent = Option1
					Toggle_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
					Toggle_3.BackgroundTransparency = 1.000
					Toggle_3.BorderColor3 = Color3.fromRGB(0, 0, 0)
					Toggle_3.BorderSizePixel = 0
					Toggle_3.Position = UDim2.new(0.0337334462, 0, 0, 0)
					Toggle_3.Size = UDim2.new(0.319197714, 0, 1, 0)
					Toggle_3.FontFace = Font.fromId(12187371840)
					Toggle_3.Text = optionName
					Toggle_3.TextColor3 = Color3.fromRGB(255, 255, 255)
					Toggle_3.TextSize = 14.000
					Toggle_3.TextXAlignment = Enum.TextXAlignment.Left

					UIAspectRatioConstraint_4.Parent = Toggle_3
					UIAspectRatioConstraint_4.AspectRatio = 2.398

					togls[optionName] = TextButton_3
				end

				local currentlyOpen = false

				local togl = {}

				ImageButton.MouseButton1Click:Connect(function()
					currentlyOpen = not currentlyOpen
					if currentlyOpen then
						DropdownPopup.Visible = true
						DropdownPopup.Size = UDim2.new(0.483, 0,0.507, 0)
						local sizetween = TweenService:Create(DropdownPopup,tweenStyle,{Size = UDim2.new(0.600, 0,0.700, 0)})
						sizetween:Play()
					else
						DropdownPopup.Size = UDim2.new(0.600, 0,0.700, 0)
						local sizetween = TweenService:Create(DropdownPopup,tweenStyle,{Size = UDim2.new(0.483, 0,0.507, 0)})
						sizetween:Play()
						sizetween.Completed:Connect(function()
							DropdownPopup.Visible = false
						end)
					end
				end)

				Comfirm.MouseButton1Click:Connect(function()
					if currentlyOpen then
						currentlyOpen = false
						DropdownPopup.Size = UDim2.new(0.600, 0,0.700, 0)
						local sizetween = TweenService:Create(DropdownPopup,tweenStyle,{Size = UDim2.new(0.453, 0,0.407, 0)})
						sizetween:Play()
						sizetween.Completed:Connect(function()
							DropdownPopup.Visible = false
						end)
					end
				end)

				for optionName, button in pairs(togls) do
					button.MouseButton1Click:Connect(function()
						oldSelected = selected
						print(optionName) -- prints the actual option text
						selected = optionName -- store the selected option
						if oldSelected ~= nil then
							if oldSelected ~= optionName then
								TweenService:Create(togls[oldSelected], tweenStyle2, {BackgroundColor3 = Color3.fromRGB(28, 28, 28)}):Play()
								TweenService:Create(togls[oldSelected].UIStroke, tweenStyle2, {Color = Color3.fromRGB(35, 35, 35)}):Play()
							end
						end
						if selected ~= nil then
							TweenService:Create(togls[selected], tweenStyle2, {BackgroundColor3 = Color3.fromRGB(20, 165, 255)}):Play()
							TweenService:Create(togls[selected].UIStroke, tweenStyle2, {Color = Color3.fromRGB(12, 100, 148)}):Play()
						end
					end)
				end

				function togl:GetSelected()
					return selected
				end

				return togl
			elseif Type == "Multiple" then
				local tweenService = game:GetService("TweenService")
				local tweenStyle = TweenInfo.new(0.13, Enum.EasingStyle.Sine)
				local tweenStyle2 = TweenInfo.new(0.28, Enum.EasingStyle.Sine)
				local selected = {}
				local Dropdown = Instance.new("Frame")
				local UICorner_8 = Instance.new("UICorner")
				local UIStroke_6 = Instance.new("UIStroke")
				local Toggle_3 = Instance.new("TextLabel")
				local ImageButton = Instance.new("ImageButton")
				local UIAspectRatioConstraint_2 = Instance.new("UIAspectRatioConstraint")
				local UICorner_9 = Instance.new("UICorner")
				local DropdownPopup = Instance.new("Frame")
				local UICorner_11 = Instance.new("UICorner")
				local UIStroke_8 = Instance.new("UIStroke")
				local Options = Instance.new("ScrollingFrame")
				local UIListLayout_4 = Instance.new("UIListLayout")
				local UIPadding_4 = Instance.new("UIPadding")
				local UIAspectRatioConstraint_6 = Instance.new("UIAspectRatioConstraint")
				local Comfirm = Instance.new("TextButton")
				local UICorner_14 = Instance.new("UICorner")
				local UIAspectRatioConstraint_7 = Instance.new("UIAspectRatioConstraint")
				local Droppopupname = Instance.new("TextLabel")
				local UIAspectRatioConstraint_8 = Instance.new("UIAspectRatioConstraint")
				local UIAspectRatioConstraint_9 = Instance.new("UIAspectRatioConstraint")

				Dropdown.Name = "Dropdown".. Name
				Dropdown.Parent = TabFrame
				Dropdown.BackgroundColor3 = Color3.fromRGB(24, 24, 24)
				Dropdown.BorderColor3 = Color3.fromRGB(0, 0, 0)
				Dropdown.BorderSizePixel = 0
				Dropdown.Size = UDim2.new(0.980000019, 0, 0.0410000011, 0)

				UICorner_8.CornerRadius = UDim.new(0.12, 0)
				UICorner_8.Parent = Dropdown

				UIStroke_6.Parent = Dropdown
				UIStroke_6.Color = Color3.fromRGB(40, 37, 38)
				UIStroke_6.Thickness = 2.000
				UIStroke_6.ApplyStrokeMode = Enum.ApplyStrokeMode.Border

				Toggle_3.Name = "Title"
				Toggle_3.Parent = Dropdown
				Toggle_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
				Toggle_3.BackgroundTransparency = 1.000
				Toggle_3.BorderColor3 = Color3.fromRGB(0, 0, 0)
				Toggle_3.BorderSizePixel = 0
				Toggle_3.Position = UDim2.new(0.0337334462, 0, 0, 0)
				Toggle_3.Size = UDim2.new(0.319197714, 0, 1, 0)
				Toggle_3.FontFace = Font.fromId(12187371840)
				Toggle_3.Text = name
				Toggle_3.TextColor3 = Color3.fromRGB(255, 255, 255)
				Toggle_3.TextSize = 14.000
				Toggle_3.TextXAlignment = Enum.TextXAlignment.Left

				ImageButton.Parent = Dropdown
				ImageButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
				ImageButton.BackgroundTransparency = 1.000
				ImageButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
				ImageButton.BorderSizePixel = 0
				ImageButton.Position = UDim2.new(0.899700403, 0, 0.189, 0)
				ImageButton.Size = UDim2.new(0.0520000011, 0, 0.638999999, 0)
				ImageButton.Image = "rbxassetid://10723346553"
				ImageButton.ImageColor3 = Color3.fromRGB(168, 168, 168)

				UIAspectRatioConstraint_2.Parent = ImageButton
				UIAspectRatioConstraint_2.AspectRatio = 1.000

				UICorner_9.CornerRadius = UDim.new(0, 4)
				UICorner_9.Parent = ImageButton
				
				DropdownPopup.Name = "DropdownPopup"
				DropdownPopup.Parent = Canvas
				DropdownPopup.AnchorPoint = Vector2.new(0.5, 0.5)
				DropdownPopup.BackgroundColor3 = Color3.fromRGB(24, 24, 24)
				DropdownPopup.BorderColor3 = Color3.fromRGB(0, 0, 0)
				DropdownPopup.BorderSizePixel = 0
				DropdownPopup.Position = UDim2.new(0.500453055, 0, 0.531322122, 0)
				DropdownPopup.Size = UDim2.new(0.58324039, 0, 0.606967211, 0)
				DropdownPopup.ZIndex = 6
				DropdownPopup.Visible = false


				UICorner_11.CornerRadius = UDim.new(0.0299999993, 0)
				UICorner_11.Parent = DropdownPopup

				UIStroke_8.Parent = DropdownPopup
				UIStroke_8.Color = Color3.fromRGB(40, 37, 38)
				UIStroke_8.Thickness = 2.000
				UIStroke_8.ApplyStrokeMode = Enum.ApplyStrokeMode.Border

				Options.Name = "Options"
				Options.Parent = DropdownPopup
				Options.Active = true
				Options.BackgroundColor3 = Color3.fromRGB(28, 28, 28)
				Options.BorderColor3 = Color3.fromRGB(0, 0, 0)
				Options.BorderSizePixel = 0
				Options.Position = UDim2.new(0.0590000004, 0, 0.144999996, 0)
				Options.Size = UDim2.new(0.883000016, 0, 0.658999979, 0)
				Options.ScrollBarImageColor3 = Color3.fromRGB(0, 0, 0)
				Options.ScrollBarImageTransparency = 1

				UIListLayout_4.Parent = Options
				UIListLayout_4.SortOrder = Enum.SortOrder.LayoutOrder
				UIListLayout_4.Padding = UDim.new(0.0199999996, 0)

				UIPadding_4.Parent = Options
				UIPadding_4.PaddingLeft = UDim.new(0.0299999993, 0)
				UIPadding_4.PaddingTop = UDim.new(0.0299999993, 0)

				UIAspectRatioConstraint_6.Parent = Options
				UIAspectRatioConstraint_6.AspectRatio = 1.829

				Comfirm.Name = "Comfirm"
				Comfirm.Parent = DropdownPopup
				Comfirm.BackgroundColor3 = Color3.fromRGB(20, 165, 255)
				Comfirm.BorderColor3 = Color3.fromRGB(0, 0, 0)
				Comfirm.BorderSizePixel = 0
				Comfirm.Position = UDim2.new(0.0590000004, 0, 0.853999972, 0)
				Comfirm.Size = UDim2.new(0.352797031, 0, 0.0977992266, 0)
				Comfirm.FontFace = Font.fromId(12187371840)
				Comfirm.Text = "Confirm"
				Comfirm.TextColor3 = Color3.fromRGB(255, 255, 255)
				Comfirm.TextScaled = true
				Comfirm.TextSize = 14.000
				Comfirm.TextWrapped = true

				UICorner_14.CornerRadius = UDim.new(0.200000003, 0)
				UICorner_14.Parent = Comfirm

				UIAspectRatioConstraint_7.Parent = Comfirm
				UIAspectRatioConstraint_7.AspectRatio = 4.924
				
				Droppopupname.Name = "Droppopupname"
				Droppopupname.Parent = DropdownPopup
				Droppopupname.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
				Droppopupname.BackgroundTransparency = 1.000
				Droppopupname.BorderColor3 = Color3.fromRGB(0, 0, 0)
				Droppopupname.BorderSizePixel = 0
				Droppopupname.Position = UDim2.new(0.059, 0,0.043, 0)
				Droppopupname.Size = UDim2.new(0.883, 0,0.081, 0)
				Droppopupname.FontFace = Font.fromId(12187371840)
				Droppopupname.TextColor3 = Color3.fromRGB(255, 255, 255)
				Droppopupname.Text = name
				Droppopupname.TextScaled = true
				Droppopupname.TextSize = 14.000
				Droppopupname.TextWrapped = true
				Droppopupname.TextXAlignment = Enum.TextXAlignment.Left

				UIAspectRatioConstraint_9.Parent = DropdownPopup
				UIAspectRatioConstraint_9.AspectRatio = 1.365

				local togls = {}

				for i, optionName in ipairs(Optionss) do
					local Option1 = Instance.new("Frame")
					local UIStroke_9 = Instance.new("UIStroke")
					local UICorner_12 = Instance.new("UICorner")
					local TextButton_3 = Instance.new("TextButton")
					local UICorner_13 = Instance.new("UICorner")
					local UIStroke_10 = Instance.new("UIStroke")
					local UIAspectRatioConstraint_3 = Instance.new("UIAspectRatioConstraint")
					local Toggle_3 = Instance.new("TextLabel")
					local UIAspectRatioConstraint_4 = Instance.new("UIAspectRatioConstraint")
					local UIAspectRatioConstraint_5 = Instance.new("UIAspectRatioConstraint")

					Option1.Name = "Option1"
					Option1.Parent = Options
					Option1.BackgroundColor3 = Color3.fromRGB(24, 24, 24)
					Option1.BorderColor3 = Color3.fromRGB(0, 0, 0)
					Option1.BorderSizePixel = 0
					Option1.Position = UDim2.new(2.28251604e-08, 0, 0.0629351735, 0)
					Option1.Size = UDim2.new(0.95, 0,0.074, 0)

					UIStroke_9.Parent = Option1
					UIStroke_9.Color = Color3.fromRGB(40, 37, 38)
					UIStroke_9.Thickness = 2.000
					UIStroke_9.ApplyStrokeMode = Enum.ApplyStrokeMode.Border

					UICorner_12.CornerRadius = UDim.new(0.119999997, 0)
					UICorner_12.Parent = Option1

					TextButton_3.Parent = Option1
					TextButton_3.BackgroundColor3 = Color3.fromRGB(28, 28, 28)
					TextButton_3.BorderColor3 = Color3.fromRGB(0, 0, 0)
					TextButton_3.BorderSizePixel = 0
					TextButton_3.Position = UDim2.new(0.871406376, 0, 0.214684561, 0)
					TextButton_3.Size = UDim2.new(0.0720606446, 0, 0.551630795, 0)
					TextButton_3.FontFace = Font.fromId(12187371840)
					TextButton_3.Text = " "
					TextButton_3.TextColor3 = Color3.fromRGB(0, 0, 0)
					TextButton_3.TextSize = 14.000

					UICorner_13.CornerRadius = UDim.new(0.150000006, 0)
					UICorner_13.Parent = TextButton_3

					UIStroke_10.Parent = TextButton_3
					UIStroke_10.Color = Color3.fromRGB(35, 35, 35)
					UIStroke_10.Thickness = 2.000
					UIStroke_10.ApplyStrokeMode = Enum.ApplyStrokeMode.Border

					UIAspectRatioConstraint_3.Parent = TextButton_3
					UIAspectRatioConstraint_3.AspectRatio = 0.982

					Toggle_3.Name = "Toggle"
					Toggle_3.Parent = Option1
					Toggle_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
					Toggle_3.BackgroundTransparency = 1.000
					Toggle_3.BorderColor3 = Color3.fromRGB(0, 0, 0)
					Toggle_3.BorderSizePixel = 0
					Toggle_3.Position = UDim2.new(0.0337334462, 0, 0, 0)
					Toggle_3.Size = UDim2.new(0.319197714, 0, 1, 0)
					Toggle_3.FontFace = Font.fromId(12187371840)
					Toggle_3.Text = optionName
					Toggle_3.TextColor3 = Color3.fromRGB(255, 255, 255)
					Toggle_3.TextSize = 14.000
					Toggle_3.TextXAlignment = Enum.TextXAlignment.Left

					UIAspectRatioConstraint_4.Parent = Toggle_3
					UIAspectRatioConstraint_4.AspectRatio = 2.398

					togls[optionName] = TextButton_3
				end

				local currentlyOpen = false

				local togl = {}

				ImageButton.MouseButton1Click:Connect(function()
					currentlyOpen = not currentlyOpen
					if currentlyOpen then
						DropdownPopup.Visible = true
						DropdownPopup.Size = UDim2.new(0.483, 0,0.507, 0)
						local sizetween = TweenService:Create(DropdownPopup,tweenStyle,{Size = UDim2.new(0.600, 0,0.700, 0)})
						sizetween:Play()
					else
						DropdownPopup.Size = UDim2.new(0.600, 0,0.700, 0)
						local sizetween = TweenService:Create(DropdownPopup,tweenStyle,{Size = UDim2.new(0.483, 0,0.507, 0)})
						sizetween:Play()
						sizetween.Completed:Connect(function()
							DropdownPopup.Visible = false
						end)
					end
				end)

				Comfirm.MouseButton1Click:Connect(function()
					if currentlyOpen then
						currentlyOpen = false
						DropdownPopup.Size = UDim2.new(0.600, 0,0.700, 0)
						local sizetween = TweenService:Create(DropdownPopup,tweenStyle,{Size = UDim2.new(0.453, 0,0.407, 0)})
						sizetween:Play()
						sizetween.Completed:Connect(function()
							DropdownPopup.Visible = false
						end)
					end
				end)

				for optionName, button in pairs(togls) do
					button.MouseButton1Click:Connect(function()
						if selected[optionName] then
							-- already selected, so unselect it
							selected[optionName] = nil
							TweenService:Create(button, tweenStyle2, {BackgroundColor3 = Color3.fromRGB(28, 28, 28)}):Play()
							TweenService:Create(button.UIStroke, tweenStyle2, {Color = Color3.fromRGB(35, 35, 35)}):Play()
						else
							-- not selected, so select it
							selected[optionName] = true
							TweenService:Create(button, tweenStyle2, {BackgroundColor3 = Color3.fromRGB(20, 165, 255)}):Play()
							TweenService:Create(button.UIStroke, tweenStyle2, {Color = Color3.fromRGB(12, 100, 148)}):Play()
						end
						print("Currently selected:", selected)
					end)
				end

				function togl:GetSelected()
					local selections = {}
					for option, isSelected in pairs(selected) do
						if isSelected then
							table.insert(selections, option)
						end
					end
					return selections
				end

				return togl 
			end
		end

		return tab
	end

	return FrameOBJ
end

return Library
