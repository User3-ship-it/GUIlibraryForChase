local Library = {}
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")

function Library:New(Name)
	local ScreenGui = Instance.new("ScreenGui")
	local ImageLabel = Instance.new("ImageLabel")
	local Canvas = Instance.new("Frame")
	local UICorner = Instance.new("UICorner")
	local UIAspectRatioConstraint = Instance.new("UIAspectRatioConstraint")
	local Title = Instance.new("TextLabel")
	local Tabs = Instance.new("Frame")
	local UIListLayout = Instance.new("UIListLayout")
	local UIPadding = Instance.new("UIPadding")

	--Properties:

	ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
	ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

	ImageLabel.Parent = ScreenGui
	ImageLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	ImageLabel.BackgroundTransparency = 1.000
	ImageLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
	ImageLabel.BorderSizePixel = 0
	ImageLabel.Position = UDim2.new(0, 0, -0.386792451, 0)
	ImageLabel.Size = UDim2.new(1, 0, 1.58018863, 0)
	ImageLabel.Visible = false
	ImageLabel.ZIndex = 2
	ImageLabel.Image = "rbxassetid://128043524692888"
	ImageLabel.ImageTransparency = 0.200

	Canvas.Name = "Canvas"
	Canvas.Parent = ScreenGui
	Canvas.BackgroundColor3 = Color3.fromRGB(24, 24, 24)
	Canvas.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Canvas.BorderSizePixel = 0
	Canvas.Position = UDim2.new(0.255686998, 0, 0.143867925, 0)
	Canvas.Size = UDim2.new(0.402, 0, 0.802, 0)

	UICorner.Parent = Canvas
	UIAspectRatioConstraint.Parent = Canvas
	UIAspectRatioConstraint.AspectRatio = 1.425

	Title.Name = "Title"
	Title.Parent = Canvas
	Title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Title.BackgroundTransparency = 1.000
	Title.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Title.BorderSizePixel = 0
	Title.Position = UDim2.new(0.014403292, 0, 0.0234604105, 0)
	Title.Size = UDim2.new(0.973251045, 0, 0.0381231718, 0)
	Title.FontFace = Font.fromId(12187371840)
	Title.Text = Name
	Title.TextColor3 = Color3.fromRGB(255, 255, 255)
	Title.TextScaled = true
	Title.TextSize = 14.000
	Title.TextWrapped = true
	Title.TextXAlignment = Enum.TextXAlignment.Left

	Tabs.Name = "Tabs"
	Tabs.Parent = Canvas
	Tabs.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Tabs.BackgroundTransparency = 1.000
	Tabs.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Tabs.BorderSizePixel = 0
	Tabs.Position = UDim2.new(0, 0,0.076, 0)
	Tabs.Size = UDim2.new(0.276, 0,0.922, 0)

	UIListLayout.Parent = Tabs
	UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
	UIListLayout.Padding = UDim.new(0.015,0)

	UIPadding.Parent = Tabs
	UIPadding.PaddingLeft = UDim.new(0.0599999987, 0)
	UIPadding.PaddingTop = UDim.new(0.00999999978, 0)

	local dragging
	local dragInput
	local dragStart
	local startPos

	local function update(input)
		local delta = input.Position - dragStart
		Canvas.Position = UDim2.new(
			startPos.X.Scale, startPos.X.Offset + delta.X,
			startPos.Y.Scale, startPos.Y.Offset + delta.Y
		)
	end
	
	Canvas.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			dragging = true
			dragStart = input.Position
			startPos = Canvas.Position

			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then
					dragging = false
				end
			end)
		end
	end)

	Canvas.InputChanged:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
			dragInput = input
		end
	end)

	UserInputService.InputChanged:Connect(function(input)
		if input == dragInput and dragging then
			update(input)
		end
	end)
	
	local selectedTab = nil
	local tabData = {}

	local FrameOBJ = {}

	function FrameOBJ:CreateTab(TabText)
		
		local tab = {}
		
		local Tab = Instance.new("TextButton")
		local UICorner = Instance.new("UICorner", Tab)
		local UIStroke = Instance.new("UIStroke", Tab)
		local BlueSelect = Instance.new("Frame", Tab)
		local TabName = Instance.new("TextLabel", Tab)

		Tab.Name = "Tab"
		Tab.Parent = Tabs
		Tab.BackgroundTransparency = 1
		Tab.Text = ""
		Tab.Size = UDim2.new(0.929, 0, 0.086, 0) -- partially scaled with pixel offset

		UIStroke.Color = Color3.fromRGB(4, 150, 245)
		UIStroke.Transparency = 1
		UIStroke.Thickness = 1.3
		UIStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border

		BlueSelect.BackgroundColor3 = Color3.fromRGB(20, 165, 255)
		BlueSelect.BorderSizePixel = 0
		BlueSelect.Position = UDim2.new(0.01, 0,0.208, 0)
		BlueSelect.Size = UDim2.new(0, 0,0.521, 0)
		BlueSelect.ZIndex = -1
		BlueSelect.Name = "BlueSelect"

		TabName.BackgroundTransparency = 1
		TabName.Position = UDim2.new(-0, 0,0.074, 0)
		TabName.Size = UDim2.new(1, 0,0.73, 0)
		TabName.FontFace = Font.fromId(12187371840)
		TabName.Text = TabText
		TabName.TextColor3 = Color3.fromRGB(255, 255, 255)
		TabName.TextSize = 13
		TabName.TextXAlignment = Enum.TextXAlignment.Left
		TabName.Name = "TabName"
		
		local UIPadding = Instance.new("UIPadding")
		UIPadding.PaddingTop = UDim.new(0.02,0)
		UIPadding.PaddingLeft = UDim.new(0.05,0)

		-- Create corresponding tab content
		local TabFrame = Instance.new("ScrollingFrame", Canvas)
		UIPadding.Parent = TabFrame
		TabFrame.Name = TabText .. "_Frame"
		TabFrame.BackgroundColor3 = Color3.fromRGB(27, 27, 27)
		TabFrame.BorderSizePixel = 0
		TabFrame.Position = UDim2.new(0.275720179, 0, 0.0825220346, 0)
		TabFrame.Size = UDim2.new(0.711934149, 0, 0.899882674, 0)
		TabFrame.Visible = false
		TabFrame.ScrollBarImageTransparency = 1
		TabFrame.VerticalScrollBarInset = Enum.ScrollBarInset.Always

		tabData[Tab] = {BlueSelect = BlueSelect, UIStroke = UIStroke, TabName = TabName, TabFrame = TabFrame}

		-- Click behavior
		Tab.MouseButton1Click:Connect(function()
			-- Reset previous tab
			if selectedTab and selectedTab ~= Tab then
				local old = tabData[selectedTab]
				TweenService:Create(old.BlueSelect, TweenInfo.new(0.3), {Size = UDim2.new(0, 0,0.521, 0)}):Play()
				TweenService:Create(old.UIStroke, TweenInfo.new(0.3), {Transparency = 1}):Play()
				TweenService:Create(old.TabName, TweenInfo.new(0.3), {TextColor3 = Color3.fromRGB(255, 255, 255)}):Play()
				old.TabFrame.Visible = false
			end

			-- Animate current tab
			local current = tabData[Tab]
			TweenService:Create(current.BlueSelect, TweenInfo.new(0.3), {Size = UDim2.new(0.9, 0,0.521, 0)}):Play()
			TweenService:Create(current.UIStroke, TweenInfo.new(0.3), {Transparency = 0}):Play()
			TweenService:Create(current.TabName, TweenInfo.new(0.3), {TextColor3 = Color3.fromRGB(0, 0, 0)}):Play()
			current.TabFrame.Visible = true

			selectedTab = Tab
		end)
		
		function tab:NewButton(Name,call)
			local TextButton = Instance.new("TextButton")
			local UICorner_4 = Instance.new("UICorner")
			local UIStroke_2 = Instance.new("UIStroke")
			
			TextButton.Parent = TabFrame
			TextButton.BackgroundColor3 = Color3.fromRGB(24, 24, 24)
			TextButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
			TextButton.BorderSizePixel = 0
			TextButton.Position = UDim2.new(9.86181892e-09, 0, 0.0101410802, 0)
			TextButton.Size = UDim2.new(0.98, 0,0.039,0)
			TextButton.FontFace = Font.fromId(12187371840)
			TextButton.TextColor3 = Color3.fromRGB(234, 234, 234)
			TextButton.Text = Name
			TextButton.TextSize = 14.000

			UICorner_4.CornerRadius = UDim.new(0, 6)
			UICorner_4.Parent = TextButton

			UIStroke_2.Parent = TextButton
			UIStroke_2.Color = Color3.fromRGB(40, 37, 38)
			UIStroke_2.Thickness = 2.000
			UIStroke_2.ApplyStrokeMode = Enum.ApplyStrokeMode.Border

			
			TextButton.MouseButton1Click:Connect(function()
				pcall(call)
			end)
			
			print(Name,call)
		end
		
		return tab
	end

	return FrameOBJ
end

return Library
